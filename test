_llseek
_newselect
void FD_CLR(int fd, fd_set *set);
int  FD_ISSET(int fd, fd_set *set);
void FD_SET(int fd, fd_set *set);
void FD_ZERO(fd_set *set);
_sysctl
int _sysctl(struct __sysctl_args *args);
accept
int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);
accept4
int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);
access
int access(const char *pathname, int mode);
acct
int acct(const char *filename);
add_key
adjtimex
int adjtimex(struct timex *buf);
alarm
unsigned int alarm(unsigned int seconds);
alloc_hugepages
int free_hugepages(void *addr);
bdflush
int bdflush(int func, long *address);
int bdflush(int func, long data);
bind
brk
int brk(void *addr);
void *sbrk(intptr_t increment);
cacheflush
int cacheflush(char *addr, int nbytes, int cache);
capget
int capget(cap_user_header_t hdrp, cap_user_data_t datap);
int capset(cap_user_header_t hdrp, const cap_user_data_t datap);
capset
int capget(cap_user_header_t hdrp, cap_user_data_t datap);
int capset(cap_user_header_t hdrp, const cap_user_data_t datap);
chdir
int chdir(const char *path);
int fchdir(int fd);
chmod
int chmod(const char *path, mode_t mode);
int fchmod(int fd, mode_t mode);
chown
int chown(const char *path, uid_t owner, gid_t group);
int fchown(int fd, uid_t owner, gid_t group);
int lchown(const char *path, uid_t owner, gid_t group);
chown32
int chown(const char *path, uid_t owner, gid_t group);
int fchown(int fd, uid_t owner, gid_t group);
int lchown(const char *path, uid_t owner, gid_t group);
chroot
int chroot(const char *path);
clock_adjtime
clock_getres
int clock_getres(clockid_t clk_id, struct timespec *res);
int clock_gettime(clockid_t clk_id, struct timespec *tp);
int clock_settime(clockid_t clk_id, const struct timespec *tp);
clock_gettime
int clock_getres(clockid_t clk_id, struct timespec *res);
int clock_gettime(clockid_t clk_id, struct timespec *tp);
int clock_settime(clockid_t clk_id, const struct timespec *tp);
clock_nanosleep
clock_settime
int clock_getres(clockid_t clk_id, struct timespec *res);
int clock_gettime(clockid_t clk_id, struct timespec *tp);
int clock_settime(clockid_t clk_id, const struct timespec *tp);
clone
close
int close(int fd);
connect
creat
int open(const char *pathname, int flags);
int open(const char *pathname, int flags, mode_t mode);
int creat(const char *pathname, mode_t mode);
create_module
caddr_t create_module(const char *name, size_t size);
delete_module
int delete_module(const char *name, int flags);
dup
int dup(int oldfd);
int dup2(int oldfd, int newfd);
int dup3(int oldfd, int newfd, int flags);
dup2
int dup(int oldfd);
int dup2(int oldfd, int newfd);
int dup3(int oldfd, int newfd, int flags);
dup3
int dup(int oldfd);
int dup2(int oldfd, int newfd);
int dup3(int oldfd, int newfd, int flags);
epoll_create
int epoll_create(int size);
int epoll_create1(int flags);
epoll_create1
int epoll_create(int size);
int epoll_create1(int flags);
epoll_ctl
int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);
epoll_pwait
epoll_wait
eventfd
int eventfd(unsigned int initval, int flags);
eventfd2
int eventfd(unsigned int initval, int flags);
execve
exit
void _exit(int status);
void _Exit(int status);
exit_group
void exit_group(int status);
faccessat
int faccessat(int dirfd, const char *pathname, int mode, int flags);
fadvise64
int posix_fadvise(int fd, off_t offset, off_t len, int advice);
fadvise64_64
int posix_fadvise(int fd, off_t offset, off_t len, int advice);
fallocate
int fallocate(int fd, int mode, off_t offset, off_t len);
fanotify_init
fanotify_mark
fchdir
int chdir(const char *path);
int fchdir(int fd);
fchmod
int chmod(const char *path, mode_t mode);
int fchmod(int fd, mode_t mode);
fchmodat
int fchmodat(int dirfd, const char *pathname, mode_t mode, int flags);
fchown
int chown(const char *path, uid_t owner, gid_t group);
int fchown(int fd, uid_t owner, gid_t group);
int lchown(const char *path, uid_t owner, gid_t group);
fchown32
